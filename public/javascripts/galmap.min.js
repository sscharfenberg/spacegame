/*!***************************************************************************************
** Project: game v0.1.0 - turn-based space game 
** Author: Sven Scharfenberg (sven.scharfenberg@projektvier.de) 
** Last Changes: 13.11.2013 16:02 
** Homepage: tbd 
** License: GNU General Public License 3.0 (http://www.gnu.org/licenses/gpl-3.0.en.html) 
*****************************************************************************************/

window.galmap=window.galmap||{prefs:{tilesize:50},tilesize:50,mapdata:null,zoom:1,init:function(){if((!Modernizr.canvas)||(!Modernizr.canvastext)){alert("Sorry, your browser does not support canvas or canvastext. Please update your browser");location.href="http://www.google.de/intl/de/chrome/browser/"}var b=$("#mapViewPort");var c=$("#viewPortRulerVert");b.height(b.width()).height(b.width());c.height(b.width());var a=galmap.loadData("./mapdata.json");a.done(function(d){game.log("Data recieved from JSON",d);galmap.mapdata=d;galmap.drawMap(d);galmap.bindMapDragging();galmap.bindRulerDragging();galmap.bindFocusButton(".mapbutton.focushome",d.systems[d.home].x,d.systems[d.home].y);galmap.bindZoom();$(".overlay.loading").hide();game.log("finished drawing map",0)}).fail(function(d){game.log("faled to recieve data from JSON",d);$(".overlay.jsonfail").show();galmap.bindRefreshButton()})},loadData:function(a){$(".overlay.loading").show();return $.getJSON(a)},drawMap:function(c){var b=$("#mapCanvas");var a=galmap.tilesize*c.settings.size;b.attr({width:a,height:a});b.clearCanvas({x:0,y:0,width:a,height:a}).removeLayers();galmap.drawGrid(c.settings.size);galmap.drawRulers(c.settings.size);game.log("Number of Wormholes",c.wormholes.length);c.wormholes.forEach(function(d){galmap.drawWormHole(d.from,d.to)});game.log("Number of Systems",c.systems.length);c.systems.forEach(function(d){galmap.drawSystem(d.id)})},drawGrid:function(){var g=$("#mapCanvas");var d="#1a1a1a";var c,b,f,e=0;for(var a=0;a<(galmap.mapdata.settings.size-1);a++){c=(galmap.tilesize*a)+galmap.tilesize;b=(galmap.tilesize*a)+galmap.tilesize;f=0;e=g.height();g.drawLine({layer:true,strokeStyle:d,strokeWidth:2,x1:c,y1:f,x2:b,y2:e});c=0;b=g.width();f=(galmap.tilesize*a)+galmap.tilesize;e=(galmap.tilesize*a)+galmap.tilesize;g.drawLine({layer:true,strokeStyle:d,strokeWidth:2,x1:c,y1:f,x2:b,y2:e})}g.drawLine({layer:true,strokeStyle:d,strokeWidth:2,x1:1,y1:1,x2:g.width()-1,y2:1,x3:g.width()-1,y3:g.height()-1,x4:1,y4:g.height()-1,x5:1,y5:1});game.log("finished drawing grid",0)},drawRulers:function(){var f=$("#rulerHorzCanvas");var g=$("#rulerVertCanvas");var n="#fff";var m="#1a1a1a";var c,a,k,j,e,d=0;var l=null;var b=galmap.tilesize*galmap.mapdata.settings.size;f.attr({width:b});g.attr({height:b});for(var h=0;h<galmap.mapdata.settings.size;h++){l=h.toString();c=Math.round((galmap.tilesize*h)+(galmap.tilesize/2));a=12;k=(galmap.tilesize*h)+galmap.tilesize;e=0;j=(galmap.tilesize*h)+galmap.tilesize;d=f.height();f.drawText({fontSize:12,fontFamily:"Arial",fillStyle:n,x:c,y:a,text:l}).drawLine({strokeStyle:m,strokeWidth:2,x1:k,y1:e,x2:j,y2:d});c=12;a=Math.round((galmap.tilesize*h)+(galmap.tilesize/2));k=0;e=(galmap.tilesize*h)+galmap.tilesize;j=g.width();d=(galmap.tilesize*h)+galmap.tilesize;g.drawText({fontSize:12,fontFamily:"Arial",fillStyle:n,x:c,y:a,text:l}).drawLine({strokeStyle:m,strokeWidth:2,x1:k,y1:e,x2:j,y2:d})}f.drawLine({strokeStyle:m,strokeWidth:2,x1:f.width(),y1:f.height(),x2:0,y2:f.height(),x3:0,y3:0,x4:f.width(),y4:0});g.drawLine({strokeStyle:m,strokeWidth:2,x1:0,y1:g.height(),x2:0,y2:0,x3:g.width(),y3:0,x4:g.width(),y4:g.height()});game.log("finished drawing rulers",0)},bindRefreshButton:function(){var b=$(".overlay.jsonfail");var a=b.find("a.refresh");game.log("refreshbutton",a);$(document).on("click",a,function(c){c.preventDefault();b.hide();game.log("refresh initiated by user",b);galmap.init()})},bindMapDragging:function(){var c=$("#mapCanvas");var d=$("#mapViewPort");var b=$("#rulerHorzCanvas");var a=$("#rulerVertCanvas");c.draggable({drag:function(e,f){b.animate({left:f.position.left},0);a.animate({top:f.position.top},0)},stop:function(i,j){game.log("drag end","position - top: "+j.position.top+", left: "+j.position.left+" // originalPosition - top: "+j.originalPosition.top+", left: "+j.originalPosition.left);var g=d.width();var e=c.attr("width")-g;var h=d.height();var f=c.attr("height")-h;if(g>c.width()){c.animate({left:"0px",top:"0px"},100);b.animate({left:"0px",top:"0px"},100);a.animate({left:"0px",top:"0px"},100)}if(j.position.left>0){c.animate({left:"0px"},100);b.animate({left:"0px"},100)}if(j.position.left<-e){c.animate({left:"-"+e+"px"},100);b.animate({left:"-"+e+"px"},100)}if(j.position.top>0){c.animate({top:"0px"},100);a.animate({top:"0px"},100)}if(j.position.top<-f){c.animate({top:"-"+f+"px"},100);a.animate({top:"-"+f+"px"},100)}}})},bindRulerDragging:function(){var c=$("#mapCanvas");var d=$("#mapViewPort");var b=$("#rulerHorzCanvas");var a=$("#rulerVertCanvas");b.draggable({axis:"x",drag:function(e,f){c.animate({left:f.position.left},0)},stop:function(g,h){var f=d.width();var e=c.attr("width")-f;if(h.position.left>0){c.animate({left:"0px"},100);b.animate({left:"0px"},100)}if(h.position.left<-e){c.animate({left:"-"+e+"px"},100);b.animate({left:"-"+e+"px"},100)}}});a.draggable({axis:"y",drag:function(e,f){c.animate({top:f.position.top},0)},stop:function(g,h){var f=d.height();var e=c.attr("height")-f;if(h.position.top>0){c.animate({top:"0px"},100);a.animate({top:"0px"},100)}if(h.position.top<-e){c.animate({top:"-"+e+"px"},100);a.animate({top:"-"+e+"px"},100)}}})},bindFocusButton:function(b,c,a){$(document).on("click",b,function(d){d.preventDefault();galmap.focusMap(c,a)})},focusMap:function(b,a){var e=galmap.getOffSetFromCoords(b,a);var d=e.x;var c=e.y;if((b===0)&&(a===0)){d=0;c=0}$("#mapCanvas").animate({left:d,top:c},500);$("#rulerHorzCanvas").animate({left:d},500);$("#rulerVertCanvas").animate({top:c},500);game.log("moving map to","x: "+d+", y:"+c+" ("+b+","+a+")")},bindZoom:function(){var a=0.43;$(".zoom a.icon").click(function(c){c.preventDefault();if(!$(this).hasClass("disabled")){game.log("zoom requested",0);var b=$("#mapCanvas").position();var d=galmap.getCoordsFromOffset(b.left,b.top);var f=d.x;var e=d.y;game.log("Coordinates before zoom","("+f+","+e+")");if($(this).hasClass("in")){galmap.zoom=galmap.zoom+a;galmap.tilesize=galmap.prefs.tilesize*galmap.zoom;galmap.drawMap(galmap.mapdata);if(galmap.zoom===1){$(".icon").removeClass("disabled")}if(galmap.zoom>1){$(".icon.in").addClass("disabled");galmap.focusMap(f,e)}}else{galmap.zoom=galmap.zoom-a;galmap.tilesize=galmap.prefs.tilesize*galmap.zoom;galmap.drawMap(galmap.mapdata);if(galmap.zoom===1){$(".icon").removeClass("disabled")}if(galmap.zoom<1){$(".icon.out").addClass("disabled");galmap.focusMap(0,0)}else{galmap.focusMap(f,e)}}}})},getCoordsFromOffset:function(d,b){var f=$("#mapCanvas");var g=$("#mapViewPort");var e=Math.abs(((g.width()/f.width())*galmap.mapdata.settings.size)/2);var c=parseInt((Math.ceil(Math.abs((d/f.width())*galmap.mapdata.settings.size)+e)-1),10);var a=parseInt((Math.ceil(Math.abs((b/f.height())*galmap.mapdata.settings.size)+e)-1),10);return{x:c,y:a}},getOffSetFromCoords:function(i,g){var a=$("#mapViewPort");var e=Math.round(a.width()/2);var c=Math.round(a.height()/2);var d=Math.round(((i+1)*galmap.tilesize)-(galmap.tilesize/2));var b=Math.round(((g+1)*galmap.tilesize)-(galmap.tilesize/2));var h=e-d;var f=c-b;return{x:h,y:f}},drawSystem:function(g){var c=galmap.mapdata.systems[g].x;var a=galmap.mapdata.systems[g].y;var d=(c*galmap.tilesize)+Math.round(galmap.tilesize/2);var b=(a*galmap.tilesize)+Math.round(galmap.tilesize/2);var e="../../public/images/stars/"+galmap.mapdata.systems[g].spectral+".png";var f=Math.round((galmap.tilesize*4)/5);game.log("drawing system"," id: "+g+", owner: "+galmap.mapdata.systems[g].owner+", spectral: "+galmap.mapdata.systems[g].spectral+", x: "+c+"("+d+"), y: "+a+"("+b+")");$("#mapCanvas").drawImage({source:e,layer:true,clickable:true,name:"system-"+g,group:["systems"],x:d,y:b,width:f,height:f,fromCenter:true,click:function(){game.log("clicked on star","id: "+g+", owner: "+galmap.mapdata.systems[g].owner+", spectral: "+galmap.mapdata.systems[g].spectral)},mousemove:function(j){$(this).css("cursor","pointer");var i,h,k;i=j.eventX-j.x;h=j.eventY-j.y;k=f-Math.sqrt(Math.pow(i,2)+Math.pow(h,2));j.width=Math.round((k/f)*f)+f;j.height=Math.round((k/f)*f)+f},mouseout:function(h){$(this).css("cursor","move");h.width=f;h.height=f;game.log("restored star defaults on mouse out",f)}})},drawWormHole:function(h,g){var a="#9cf";var f=(galmap.mapdata.systems[h].x*galmap.tilesize)+(galmap.tilesize/2);var c=(galmap.mapdata.systems[h].y*galmap.tilesize)+(galmap.tilesize/2);var e=(galmap.mapdata.systems[g].x*galmap.tilesize)+(galmap.tilesize/2);var b=(galmap.mapdata.systems[g].y*galmap.tilesize)+(galmap.tilesize/2);var d=1;if(galmap.zoom>1){d=2}game.log("drawing wormhole","from #"+h+" ("+f+","+c+") to #"+g+" ("+e+","+b+")");$("#mapCanvas").drawLine({layer:true,group:["wormholes"],strokeStyle:a,strokeWidth:d,x1:f,y1:c,x2:e,y2:b})}};galmap.init();