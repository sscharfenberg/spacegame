/*!***************************************************************************************
** Project: game v0.0.1 - turn-based space game 
** Author: Sven Scharfenberg (sven.scharfenberg@projektvier.de) 
** Last Changes: 26.11.2013 12:29 
** Homepage: tbd 
** License: GNU General Public License 3.0 (http://www.gnu.org/licenses/gpl-3.0.en.html) 
*****************************************************************************************/

window.galmap=window.galmap||{tileSize:0,mapData:null,cameraX:0,cameraY:0,mapWidth:0,mapHeight:0,canvasWidth:0,canvasHeight:0,init:function(){if((!Modernizr.canvas)||(!Modernizr.canvastext)){alert("Sorry, your browser does not support canvas or canvastext. Please update your browser");window.location.href="http://www.google.de/intl/de/chrome/browser/"}var b=$("#mapViewPort"),c=$("#viewPortRulerVert");b.height(b.width()).height(b.width());c.height(b.height());var a=galmap.loadData("./mapdata.json");a.done(function(d){utils.log("Data recieved from JSON",d);galmap.mapData=d;galmap.setInitialZoom();galmap.drawMap(d);galmap.bindMapDragging();galmap.bindZoom();$(".overlay.loading").hide();$(document).on("click",".mapbutton.focushome",function(e){e.preventDefault();galmap.focusMap(galmap.mapData.systems[galmap.mapData.player.home].x,galmap.mapData.systems[galmap.mapData.player.home].y)})}).fail(function(d){utils.log("faled to recieve data from JSON",d);$(".overlay.jsonfail").show()})},loadData:function(a){$(".overlay.loading").show();return $.getJSON(a)},setInitialZoom:function(){var b=$("#currentZoomMarker"),a;if(Modernizr.localstorage){if(localStorage["galmap.zoomlevel"]){a=parseInt(b.find("span").length,10)-parseInt(localStorage["galmap.zoomlevel"],10)-1}else{a=Math.ceil(parseInt(b.find("span").length-1,10)/2);localStorage["galmap.zoomlevel"]=a}}else{a=Math.ceil(parseInt(b.find("span").length-1,10)/2)}galmap.tileSize=parseInt(b.find("span").eq(a).addClass("active").text(),10);if(b.find("span:first").hasClass("active")){$(".icon.in").addClass("disabled")}if(b.find("span:last").hasClass("active")){$(".icon.out").addClass("disabled")}},drawMap:function(d){var a=0;utils.log("============ START DRAWING MAP ============");galmap.prepareStages(d);galmap.drawGrid(d,galmap.cameraX,galmap.cameraY);galmap.drawRulers(d,galmap.cameraX,galmap.cameraY);for(var b=0;b<d.wormholes.length;b++){galmap.drawWormHole(d.wormholes[b].id)}utils.log("number of wormholes: "+d.wormholes.length);for(var c=0;c<d.systems.length;c++){if(galmap.drawSystem(d.systems[c].id)){a++}}utils.log("number of systems: "+d.systems.length+". Drawn on canvas: "+a);utils.log("========== FINISHED DRAWING MAP ===========")},prepareStages:function(c){var b=$("#mapCanvas"),a=$("#mapViewPort");galmap.mapWidth=parseInt(galmap.tileSize*c.settings.size.width,10);galmap.mapHeight=parseInt(galmap.tileSize*c.settings.size.height,10);galmap.canvasWidth=parseInt(a.width()*3,10);galmap.canvasHeight=parseInt(a.height()*3,10);utils.log("Size of map - width:"+galmap.mapWidth+" - height:"+galmap.mapHeight);utils.log("Size of canvas - width:"+galmap.canvasWidth+" - height:"+galmap.canvasHeight);if((Modernizr.localstorage)&&(localStorage["galmap.camera.x"])&&(localStorage["galmap.camera.y"])&&(galmap.cameraX===0)&&(galmap.cameraY===0)){galmap.cameraX=Math.abs(parseInt(localStorage["galmap.camera.x"],10));galmap.cameraY=Math.abs(parseInt(localStorage["galmap.camera.y"],10))}utils.log("Current camera position - x:"+galmap.cameraX+", y:"+galmap.cameraY);b.prop({width:galmap.canvasWidth,height:galmap.canvasHeight});b.clearCanvas({x:0,y:0,width:galmap.canvasWidth,height:galmap.canvasHeight}).removeLayers();b.css({left:-parseInt(a.width(),10),top:-parseInt(a.height(),10)});$("#rulerHorzCanvas").prop({width:galmap.canvasWidth}).css("left",-parseInt(a.width(),10));$("#rulerVertCanvas").prop({height:galmap.canvasHeight}).css("top",-parseInt(a.width(),10))},drawGrid:function(b,p,o){var e,q=0,g=0,c=$("#mapCanvas"),f=$("#mapViewPort"),n="#000",m=2;if(galmap.tileSize<50){m=1}for(e=0;e<b.settings.size.width+1;e++){var l=galmap.tileSize*e+parseInt(f.width()-p,10),k=parseInt(f.height()-o,10),j=parseInt(f.height()-o+(galmap.mapHeight),10);if(k<0){k=0}if(j>galmap.canvasHeight){j=galmap.canvasHeight}if((l<galmap.canvasWidth)&&(l>=0)){q++;c.drawLine({layer:true,groups:["grid"],name:"gridlinevert-"+e,strokeStyle:n,strokeWidth:m,x1:l,y1:k,x2:l,y2:j,fromCenter:false})}}for(e=0;e<b.settings.size.height+1;e++){var h=galmap.tileSize*e+parseInt(f.width()-o,10),d=parseInt(f.width()-p,10),a=parseInt(f.width()-p+(b.settings.size.width*galmap.tileSize),10);if(d<0){d=0}if(a>galmap.canvasWidth){a=galmap.canvasWidth}if((h<galmap.canvasHeight)&&(h>=0)){g++;c.drawLine({layer:true,groups:["grid"],name:"gridlinehorz-"+e,strokeStyle:n,strokeWidth:m,x1:d,y1:h,x2:a,y2:h,fromCenter:false})}}utils.log("finished drawing grid with "+q+" vertical and "+g+" horizontal lines")},drawRulers:function(a,q,o){var c=$("#rulerHorzCanvas"),f=$("#rulerVertCanvas"),d=$("#mapViewPort"),p="#fff",n="#000",r=12,h="Arial",m=2,b=0,g=0,k,e,l,j;if(galmap.tileSize<50){m=1;r=11}if(galmap.tileSize<35){r=10}for(e=0;e<a.settings.size.width;e++){k=e.toString();if((galmap.tileSize*e)-q<c.width()){b++;l=(galmap.tileSize*e)+parseInt(d.width(),10)-q;c.drawText({fontSize:r,fontFamily:h,fillStyle:p,x:l+Math.round(galmap.tileSize/2),y:12,text:k}).drawLine({strokeStyle:n,strokeWidth:m,x1:l+galmap.tileSize,y1:0,x2:l+galmap.tileSize,y2:c.height()})}}utils.log("finished drawing horizontal ruler with "+b+" coordinates.");for(e=0;e<a.settings.size.height;e++){k=e.toString();if((galmap.tileSize*e)-o<f.height()){g++;j=(galmap.tileSize*e)+parseInt(d.height(),10)-o;f.drawText({fontSize:r,fontFamily:h,fillStyle:p,x:12,y:j+Math.round(galmap.tileSize/2),text:k}).drawLine({strokeStyle:n,strokeWidth:m,x1:0,y1:j+galmap.tileSize,x2:f.height(),y2:j+galmap.tileSize})}}utils.log("finished drawing vertical ruler with "+g+" coordinates.")},bindMapDragging:function(){var b=$("#mapCanvas"),a=$("#mapViewPort");b.drag(function(f,c){var h,g,e,d;h=-(parseInt(a.width(),10)-galmap.cameraX);e=-(parseInt(a.height(),10)-galmap.cameraY);g=-(galmap.mapWidth-galmap.cameraX);d=-(galmap.mapHeight-galmap.cameraY);if(galmap.mapHeight<a.height()){d=-(parseInt(a.height(),10)-galmap.cameraY)}if(galmap.mapWidth<a.width()){g=-(parseInt(a.width(),10)-galmap.cameraX)}if(c.offsetX>h){c.offsetX=h;a.addClass("tiltLeft")}else{a.removeClass("tiltLeft")}if(c.offsetY>e){c.offsetY=e;a.addClass("tiltTop")}else{a.removeClass("tiltTop")}if(c.offsetX<g){c.offsetX=g;a.addClass("tiltRight")}else{a.removeClass("tiltRight")}if(c.offsetY<d){c.offsetY=d;a.addClass("tiltBottom")}else{a.removeClass("tiltBottom")}$(this).css({top:c.offsetY,left:c.offsetX});$("#rulerHorzCanvas").css("left",c.offsetX);$("#rulerVertCanvas").css("top",c.offsetY)}).drag("end",function(){a.removeClass("tiltBottom tiltLeft tiltRight tiltTop");var d=Math.abs(parseInt(b.css("left"),10))-parseInt(a.width(),10);var c=Math.abs(parseInt(b.css("top"),10))-parseInt(a.width(),10);utils.log("dragged map by .. x:"+d+", y:"+c);galmap.setCamera(galmap.cameraX+d,galmap.cameraY+c);galmap.drawMap(galmap.mapData)},{relative:true})},bindZoom:function(){$(document).on("click",".zoom a.icon",function(b){b.preventDefault();var a=$("#currentZoomMarker");if(($(this).hasClass("in"))&&(!$(this).hasClass("disabled"))){if(a.find("span.active").next("span").length===0){$(".icon.out").removeClass("disabled")}if(a.find("span.active").prev("span").length>0){a.find("span.active").removeClass("active").prev("span").addClass("active")}if(a.find("span.active").prev("span").length===0){$(this).addClass("disabled")}galmap.doZoom(galmap.tileSize,parseInt(a.find("span.active").text(),10))}if(($(this).hasClass("out"))&&(!$(this).hasClass("disabled"))){if(a.find("span.active").prev("span").length===0){$(".icon.in").removeClass("disabled")}if(a.find("span.active").next("span").length>0){a.find("span.active").removeClass("active").next("span").addClass("active")}if(a.find("span.active").next("span").length===0){$(this).addClass("disabled")}galmap.doZoom(galmap.tileSize,parseInt(a.find("span.active").text(),10))}})},doZoom:function(a,d){var f=$("#currentZoomMarker"),e,i,g;e=galmap.convertCameraToCenteredCoords(galmap.cameraX,galmap.cameraY,a);i=e.x;g=e.y;utils.log("center coordinates before zoom .. x:"+i+", y:"+g);var c=galmap.convertCenteredCoordsToCamera(i,g,d),j=c.x,h=c.y;utils.log("changing camera for zoom to x:"+j+", y:"+h);galmap.cameraX=j;galmap.cameraY=h;galmap.tileSize=d;if(Modernizr.localstorage){var b=parseInt(f.find("span").length,10)-parseInt(f.find("span.active").index(),10)-1;utils.log("saving to localStorage .. zoom:"+b+", x:"+j+", y:"+h);localStorage["galmap.zoomlevel"]=b;localStorage["galmap.camera.x"]=j;localStorage["galmap.camera.y"]=h}else{utils.log("localStorage not supported, saving to namespaced vars only. change will not persist on refresh.")}galmap.drawMap(galmap.mapData)},drawSystem:function(h){var e=$("#mapCanvas"),g="10pt",f="#fff",a=6;if(galmap.tileSize>=80){a=10}if((galmap.tileSize>=65)&&(galmap.tileSize<80)){a=8}if((galmap.tileSize>=50)&&(galmap.tileSize<65)){g="9pt"}if((galmap.tileSize>=35)&&(galmap.tileSize<50)){g="7pt";a=5}if((galmap.tileSize>=20)&&(galmap.tileSize<35)){g="6pt";a=3}var c=new galmap.System(h);if(c.draw){var d,b;e.drawImage({source:$("#spriteStars").prop("src"),sWidth:c.spritepixels,sHeight:c.spritepixels,sx:0,sy:(galmap.mapData.systems[h].spectral*c.spritepixels),cropFromCenter:false,layer:true,clickable:true,name:"system-"+h+"-star",groups:["systems","system-"+h],x:c.x,y:c.y,width:c.imagepixels,height:c.imagepixels,fromCenter:true,mouseover:function(){e.css("cursor","pointer")},mouseout:function(){$(this).css("cursor","move")},mousedown:function(){event.stopImmediatePropagation();utils.log("clicked on star - id: "+h+", owner: ["+c.ownerticker+"], spectral: "+galmap.mapData.systems[h].spectral)}});b=utils.getStandingsColor(c.standing);d=e.createGradient({x1:c.x+Math.round(galmap.tileSize/2.7),y1:c.y+Math.round(galmap.tileSize/2.7),x2:c.x+Math.round(galmap.tileSize/2.7),y2:c.y+Math.round(galmap.tileSize/2.7),r1:a/5,r2:a,c1:b,c2:"#000"});e.drawArc({layer:true,name:"system-"+h+"-standing",groups:["systems","system-"+h],fillStyle:d,x:c.x+Math.round(galmap.tileSize/2.7),y:c.y+Math.round(galmap.tileSize/2.7),radius:a,shadowColor:"#000",shadowBlur:a/2});if(c.ownerid!==0){e.drawText({layer:true,name:"system-"+h+"-owner",groups:["systems","system-"+h],fontSize:g,fontFamily:"Arial",fillStyle:f,x:c.x,y:c.y-Math.round(galmap.tileSize/2)+parseInt(g,10)/2,text:c.ownerticker,shadowColor:"#fff",shadowBlur:(parseInt(g,10)/3),mouseover:function(){e.css("cursor","pointer")},mouseout:function(){$(this).css("cursor","move")},mousedown:function(){event.stopImmediatePropagation();utils.log("clicked on star owner - id: "+c.ownerid+", owner: ["+c.ownerticker+"] "+c.ownername)}})}if(utils.VERBOSE){utils.log("drawing system - id: "+h+", owner: "+c.ownerticker+", spectral: "+galmap.mapData.systems[h].spectral+", x: "+c.coordy+"("+c.x+"), y: "+c.coordx+"("+c.y+")")}}return c.draw},System:function(f){var d=$("#mapViewPort"),e=(galmap.mapData.systems[f].x*galmap.tileSize)+Math.round(galmap.tileSize/2),c=(galmap.mapData.systems[f].y*galmap.tileSize)+Math.round(galmap.tileSize/2),a=galmap.convertWorldToScreen(e,c);this.coordx=galmap.mapData.systems[f].x;this.coordy=galmap.mapData.systems[f].y;this.x=a.x;this.y=a.y;this.draw=true;if((this.x<0)||(this.y<0)||(this.y>galmap.canvasHeight)||(this.x>galmap.canvasWidth)){this.draw=false}if((this.x>(galmap.mapWidth+d.width()))||(this.y>(galmap.mapHeight+d.height()))){this.draw=false}this.spritepixels=64;this.imagepixels=Math.round((galmap.tileSize*4)/5);for(var b=0;b<galmap.mapData.empires.length;b++){if(galmap.mapData.empires[b].id===galmap.mapData.systems[f].owner){this.ownerid=galmap.mapData.empires[b].id;this.ownerticker=galmap.mapData.empires[b].ticker;this.ownername=galmap.mapData.empires[b].name;this.standing=galmap.mapData.empires[b].standing}}},drawWormHole:function(e){var d=2,a="#6e93b8",b;if(galmap.tileSize>=20){d=1;b=2}if(galmap.tileSize>=35){d=1;b=2.5}if(galmap.tileSize>=50){d=3;b=4}if(galmap.tileSize>=65){d=4;b=5}if(galmap.tileSize>=80){d=5;b=6}var c=new galmap.WormHole(e);$("#mapCanvas").drawLine({layer:true,rounded:true,name:"wormhole-"+e,groups:["wormholes","wormhole-"+e],strokeStyle:a,strokeWidth:d,x1:c.startx,y1:c.starty,x2:c.endx,y2:c.endy}).drawArc({layer:true,rounded:true,name:"wormhole-"+e+"-startarc",groups:["wormholes","wormhole-"+e],fillStyle:a,x:c.startx,y:c.starty,radius:b}).drawArc({layer:true,rounded:true,name:"wormhole-"+e+"-endarc",groups:["wormholes","wormhole-"+e],fillStyle:a,x:c.endx,y:c.endy,radius:b});if(utils.VERBOSE){utils.log("drawing wormhole #"+e+" from #"+c.from+" ("+c.startcoordx+","+c.startcoordy+") to #"+c.to+" ("+c.endcoordx+","+c.endcoordy+")")}},WormHole:function(a){this.from=galmap.mapData.wormholes[a].from;this.to=galmap.mapData.wormholes[a].to;fromCenterX=(galmap.mapData.systems[this.from].x*galmap.tileSize)+Math.round(galmap.tileSize/2);fromCenterY=(galmap.mapData.systems[this.from].y*galmap.tileSize)+Math.round(galmap.tileSize/2);toCenterX=(galmap.mapData.systems[this.to].x*galmap.tileSize)+Math.round(galmap.tileSize/2);toCenterY=(galmap.mapData.systems[this.to].y*galmap.tileSize)+Math.round(galmap.tileSize/2);deltaY=toCenterY-fromCenterY;deltaX=toCenterX-fromCenterX;theta=Math.atan2(deltaY,deltaX)*180/Math.PI;distanceFromCenter=Math.round(galmap.tileSize/2);worldStartX=parseInt(Math.cos(theta*Math.PI/180)*distanceFromCenter,10)+fromCenterX;worldStartY=parseInt(Math.sin(theta*Math.PI/180)*distanceFromCenter,10)+fromCenterY;worldEndX=toCenterX-parseInt(Math.cos(theta*Math.PI/180)*distanceFromCenter,10);worldEndY=toCenterY-parseInt(Math.sin(theta*Math.PI/180)*distanceFromCenter,10);this.startcoordx=galmap.mapData.systems[this.from].x;this.startcoordy=galmap.mapData.systems[this.from].y;screenStart=galmap.convertWorldToScreen(worldStartX,worldStartY);this.startx=screenStart.x;this.starty=screenStart.y;this.endcoordx=galmap.mapData.systems[this.to].x;this.endcoordy=galmap.mapData.systems[this.to].y;screenEnd=galmap.convertWorldToScreen(worldEndX,worldEndY);this.endx=screenEnd.x;this.endy=screenEnd.y},focusMap:function(j,i){var a=$("#mapCanvas"),e=$("#mapViewPort"),g="#153b61",b=e.width()/galmap.tileSize/2,d=j-b,c=i-b,h=parseInt(d*galmap.tileSize,10)+Math.round(galmap.tileSize/2),f=parseInt(c*galmap.tileSize,10)+Math.round(galmap.tileSize/2);if(h>(galmap.mapWidth-e.width())){h=galmap.mapWidth-e.width()}if(f>(galmap.mapHeight-e.height())){f=galmap.mapHeight-e.height()}galmap.setCamera(h,f);utils.log("center map on "+j+"("+h+"), "+i+"("+f+")");galmap.drawMap(galmap.mapData);a.stopLayerGroup("flashbg").removeLayerGroup("flashbg").drawRect({fillStyle:g,layer:true,groups:["flashbg"],fromCenter:false,x:(j*galmap.tileSize)-galmap.cameraX+e.width()+1,y:0,width:galmap.tileSize-2,height:(i*galmap.tileSize)-galmap.cameraY+e.height()-1}).drawRect({fillStyle:g,layer:true,groups:["flashbg"],fromCenter:false,x:((j+1)*galmap.tileSize)-galmap.cameraX+e.width()+1,y:(i*galmap.tileSize)-galmap.cameraY+e.height()+1,width:(e.width()*2),height:galmap.tileSize-2}).drawRect({fillStyle:g,layer:true,groups:["flashbg"],fromCenter:false,x:(j*galmap.tileSize)-galmap.cameraX+e.width()+1,y:((i+1)*galmap.tileSize)-galmap.cameraY+e.height()+1,width:galmap.tileSize-2,height:(e.width()*2)}).drawRect({fillStyle:g,layer:true,groups:["flashbg"],fromCenter:false,x:0,y:(i*galmap.tileSize)-galmap.cameraY+e.height()+1,width:(j*galmap.tileSize)-galmap.cameraX+e.width()-1,height:galmap.tileSize-2});a.animateLayerGroup("flashbg",{fillStyle:"transparent"},2000,"swing",function(){a.removeLayerGroup("flashbg")}).drawLayers()},setCamera:function(b,a){galmap.cameraX=b;galmap.cameraY=a;if(galmap.cameraX<0){galmap.cameraX=0}if(galmap.cameraY<0){galmap.cameraY=0}if(Modernizr.localstorage){localStorage["galmap.camera.x"]=galmap.cameraX;localStorage["galmap.camera.y"]=galmap.cameraY;utils.log("saved new map offset to localstorage - x:"+galmap.cameraX+", y:"+galmap.cameraY)}else{utils.log("localStorage not supported, saving to namespaced vars only. change will not persist on refresh.")}},convertCenteredCoordsToCamera:function(i,g,h){var d=$("#mapViewPort"),a=d.width()/h/2,c=i-a,b=g-a,f=parseInt(c*h,10),e=parseInt(b*h,10);if(h*galmap.mapData.settings.size.width<(f+d.width())){f=parseInt(h*galmap.mapData.settings.size.width-d.width(),10)}if(h*galmap.mapData.settings.size.height<(e+d.height())){e=parseInt(h*galmap.mapData.settings.size.height-d.height(),10)}if(f<0){f=0}if(e<0){e=0}return{x:f,y:e}},convertCameraToCenteredCoords:function(d,c,b){var a=$("#mapViewPort");return{x:(d/b)+a.width()/(b*2),y:(c/b)+a.width()/(b*2)}},convertWorldToScreen:function(c,b){var a=$("#mapViewPort");return{x:c+a.width()-galmap.cameraX,y:b+a.height()-galmap.cameraY}}};galmap.init();